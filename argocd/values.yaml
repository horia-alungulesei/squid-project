argo-cd:
  global:
    domain: argocd.ebury.dev

  configs:
    cmp:
      create: true
      plugins:
        helmfile:
          allowConcurrency: true
          discover:
            fileName: helmfile.yaml
          generate:
            command:
              - bash
              - "-c"
              - |
                if [[ -v ENV_NAME ]]; then
                  helmfile -n "$ARGOCD_APP_NAMESPACE" -e $ENV_NAME template --include-crds -q
                elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                  helmfile -n "$ARGOCD_APP_NAMESPACE" -e "$ARGOCD_ENV_ENV_NAME" template --include-crds -q
                else
                  helmfile -n "$ARGOCD_APP_NAMESPACE" template --include-crds -q
                fi
          lockRepo: false
    params:
      server.insecure: true

  repoServer:
    extraContainers:
      - name: helmfile
        image: ghcr.io/helmfile/helmfile
        # Entrypoint should be Argo CD lightweight CMP server i.e. argocd-cmp-server
        command: ["/var/run/argocd/argocd-cmp-server"]
        env:
          - name: HELM_CACHE_HOME
            value: /tmp/helm/cache
          - name: HELM_CONFIG_HOME
            value: /tmp/helm/config
          - name: HELMFILE_CACHE_HOME
            value: /tmp/helmfile/cache
          - name: HELMFILE_TEMPDIR
            value: /tmp/helmfile/tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          # Register helmfile plugin into sidecar
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: helmfile.yaml
            name: argocd-cmp-cm
          # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps mitigate path traversal attacks.
          #- mountPath: /tmp
          #  name: cmp-tmp
    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: helmfile-tmp
        emptyDir: {}

  server:
    ingress:
      enabled: true
      ingressClassName: nginx #TODO: use appropriate ingress controller for staging/prod
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      extraTls:
        - hosts:
          - argocd.ebury.dev
